import { ModuleRef } from '@nestjs/core';
export declare const randomDigits: (length?: number) => string;
export declare const random: (length?: number) => string;
export declare const environment: string;
export declare const isProduction: boolean;
export declare const isTesting: boolean;
export declare const isLocal: boolean;
export declare let moduleRef: ModuleRef;
export declare const setModuleRef: (aModuleRef: ModuleRef) => void;
export declare const outject: (service: any) => any;
export declare const formatPhoneNumber: (value: string) => string;
export declare const unifyPhoneNumber: (value: string) => string;
export declare const isPhoneNumber: (value: string) => boolean;
export declare const isEmailAddress: (value: string) => boolean;
export declare function isNumeric(str: string): boolean;
export declare function isNullOrUndefined(value: any): boolean;
export declare function isUndefined(value: any): boolean;
export declare function isBlankString(value: any): boolean;
export declare function isFunction(value: any): boolean;
export declare function isObject(x: any): boolean;
export declare function isArray(x: any): boolean;
export declare function toJSON(mayBeJSON: string, returnJSON?: boolean): any;
export declare function ucfirst(phrase: string): string;
export declare const titleCase: (phrase: string) => string;
export declare const prettify: (phrase: string) => string;
export type HttpResponse = [boolean, number, string, string, any];
export declare const trimString: (characters: string, replaceWith?: string) => string;
export declare function copy(src: string, dest: string): void;
export declare const maskPhoneNumber: (val: string, use?: string, prefixLen?: number, suffixLen?: number) => string;
export declare const mkDir: (path: string, callback: (e: any) => void) => void;
export declare const rmDir: (path: string, callback: (e: any) => void) => void;
export declare const mask: (val: string, use?: string) => string;
export declare const makeFilter: (query: string, from: string, to: string, columns: string[]) => any[];
export declare const isArrayEmpty: (val: any[]) => boolean;
export declare const reference: (service?: string, maxLength?: number) => string;
export declare const trimUser: (user: any) => any;
export declare const prettyTimeLeft: (ms: number) => string;
export declare const randomType: (len: number, type?: 'alpha' | 'num' | 'alphaNum') => string;
export declare const randomUsername: () => string;
export declare const randomReferralCode: () => string;
export declare const shuffle: (arr: any[]) => any[];
export declare const qrImageToCode: (base64Image: string) => Promise<unknown>;
export declare const qrCodeToImage: (code: string) => any;
export declare const sleep: (ms: number) => Promise<unknown>;
export declare const concat: (...parts: string[]) => string;
export declare const sortObject: (obj: any, compareFn?: (a: any, b: any) => number) => {};
export declare const fileToBase64: (path: string) => string;
export declare const base64ToFile: (base64: string, file: string) => void;
export declare const getOrderNumber: () => string;
